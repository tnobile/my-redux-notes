{"version":3,"sources":["redux/features/searchTerm/searchTermSlice.js","redux/features/notes/notesSlice.js","components/Notes/Note.js","components/Notes/NoteCounter.js","components/Notes/EditNote.js","components/Notes/NoteList.js","components/Notes/AddNote.js","redux/features/searchTerm/SearchTerm.js","components/Notes/SettingsPane.js","components/Notes/NotesApp.js","redux/features/todos/todosSlice.js","components/Todos/TodoList.js","components/Todos/Header.js","components/Todos/NewItem.js","components/Todos/TodoApp.js","HowTo.mdx","App.js","reportWebVitals.js","redux/middleware/logger.js","redux/store/index.js","index.js"],"names":["setSearchTerm","term","type","payload","selectSearchTerm","state","searchTerm","selectFilteredAllNotes","allNotes","notes","selectAllNotes","filter","note","content","toLowerCase","includes","uuidv4","require","createSelector","fetchNotes","num","dispatch","getState","a","fetchNotesBegin","Promise","r","setTimeout","Math","random","fetchNotesError","fetch","response","ok","message","status","Error","json","quotes","loadNotes","slice","console","log","notesSlice","createSlice","name","initialState","loading","error","reducers","addNote","action","map","p","id","title","body","editong","deleteNote","editNote","editing","updateNote","clearNotes","actions","connect","className","onClick","NoteCounter","useSelector","store","shallowEqual","length","EditNote","useState","setTitle","setContent","useDispatch","onSubmit","e","preventDefault","data","required","value","onChange","target","rows","NoteList","notesItems","AddNote","setValue","nanoid","placeholder","SearchTerm","alt","src","userInput","SettingsPane","handleClick","handleClear","handleFetchError","handleSearch","setTerm","evt","NotesApp","useEffect","v","list","itemId","task","completed","deleted","addItem","newItem","todoItem","push","deleteDone","item","updateList","itemIndex","updatedList","removeItem","reducer","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","background","paper","margin","strike","textDecoration","classes","todos","listItems","labelId","listItemText","ListItemText","primary","ListItem","button","ListItemSecondaryAction","Checkbox","edge","checked","inputProps","List","dense","TabPanel","props","children","index","role","hidden","aria-labelledby","Typography","Header","Tabs","newValue","style","indicatorColor","textColor","centered","Tab","label","grid","alignItems","boxSizing","padding","input","width","mapDispatchToProps","React","entry","updateEntry","Grid","container","spacing","xs","TextField","Button","variant","color","height","TodoApp","Paper","TodoList","Box","msg","display","textAlign","fontSize","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","NavBar","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","logger","next","group","info","result","groupEnd","combineReducers","todosSlice","configureStore","middleware","thunk","loggerMiddleware","getDefaultMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.578d1494.chunk.js","sourcesContent":["//import { createSlice } from \"@reduxjs/toolkit\";\n// const searchSlice = createSlice({\n//     name: \"term\",\n//     initialState: \"\",\n//     reducers: {\n//         searchNotes: (state, action) => state = action.payload\n//     }\n// });\n\n\n// export const { searchNotes } = searchSlice.actions;\n// export default searchSlice.reducer;\n\nconst initialState = \"\";\n\nexport const searchTermReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'searchTerm/setSearchTerm':\n            return action.payload;\n        case 'searchTerm/clearSearchTerm':\n            return '';\n        default:\n            return state;\n    }\n}\n\n// action creator\nexport function setSearchTerm(term) {\n    return {\n        type: 'searchTerm/setSearchTerm',\n        payload: term\n    }\n}\n\n// action creator\nexport function clearSearchTerm() {\n    return {\n        type: 'searchTerm/clearSearchTerm'\n    }\n}\n\nexport const selectSearchTerm = (state) => state.searchTerm;\nexport const selectAllNotes = state => state.notes.notes;\n\nexport const selectFilteredAllNotes = (state) => {\n    const allNotes = selectAllNotes(state);\n    const searchTerm = selectSearchTerm(state);\n    return allNotes.filter(note => !searchTerm || searchTerm === '' ? true :\n        note.content.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n};","import { createSlice, createSelector } from '@reduxjs/toolkit';\nconst uuidv4 = require(\"uuid/v4\")\n\nexport const selectNotes = (state) => state.notes.notes;\n\nexport const selectNotesIds = createSelector(\n    selectNotes,\n    notes => notes\n)\n\nexport function fetchNotes(num = 9) {\n    return async function fetchNotesThunk(dispatch, getState) {\n        // fetch('https://jsonplaceholder.typicode.com/posts')\n        //     .then(response => response.json())\n        //     .then(json => {\n        //         //console.log(\"p\", json)\n        //         dispatch(loadNotes(json.slice(0, 11)));\n        //     });\n\n        dispatch(fetchNotesBegin());\n\n        // sleep\n        await new Promise(r => setTimeout(r, 2000 * Math.random()));\n\n        try {\n            if (num < 0) {\n                dispatch(fetchNotesError(\"oops!  ya me lo has dicho...\"));\n                return\n            }\n\n            let url = 'https://jsonplaceholder.typicode.com/posts';\n            //url = 'https://zenquotes.io/api/quotes'\n\n            const response = await fetch(url)\n            if (!response.ok) {\n                //throw Error(response.statusText);\n                const message = `An error has occured: ${response.status}`;\n                throw new Error(message);\n            }\n            const quotes = await response.json();\n            //const notes = quotes.map(q => { return { title: q.q, content:q.a } });\n            dispatch(loadNotes(quotes.slice(0, num)));\n        } catch (error) {\n            console.log('fetch error: ', error);\n            dispatch(fetchNotesError(error.message));\n        }\n    }\n}\n\nconst notesSlice = createSlice({\n    // A name, used in action types\n    name: \"notes\",\n    // better with initialState: []\n    initialState: {\n        notes: [],\n        loading: false,\n        error: null,\n    },\n    reducers: {\n        // Redux toolkit uses Immer, you do not have to worry about mutating the state, but... just keep the logic\n        //\n        // Error: An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft\n        // The issue is the use of an arrow function with no curly braces as the reducer, because that acts as an implicit return statement. \n        //So, you're both mutating state.token, and returning the result of the assignment.\n        addNote: (state, action) => state = { ...state, notes: [action.payload, ...state.notes], error: null },\n        loadNotes: (state, action) => { state.loading = false; state.notes = [...state.notes, ...action.payload.map(p => ({ id: uuidv4(), title: p.title, content: p.body, editong: false }))] },\n        deleteNote: (state, action) => { state.notes = [...state.notes.filter(p => p.id !== action.payload)] },\n        editNote: (state, action) => { state.notes = state.notes.map(note => note.id === action.payload ? { ...note, editing: true } : note) },\n        updateNote: (state, action) => { state.notes = [{ ...action.payload, editing: false }, ...state.notes.filter(note => note.id !== action.payload.id),] },\n        clearNotes: state => state = { loading: false, error: null, notes: [] },\n        fetchNotesBegin: state => state = { ...state, loading: true, error: null },\n        fetchNotesError: (state, action) => state = { ...state, loading: false, error: action.payload },\n    }\n});\n\n// Will handle the action type `'notes/add'`, etc.\nexport const { addNote, loadNotes, deleteNote, editNote, updateNote, clearNotes, fetchNotesBegin, fetchNotesError, } = notesSlice.actions;\n\nexport default notesSlice.reducer;","import React from 'react';\nimport { connect } from 'react-redux'\n//import { editNote, deleteNote } from '../redux/actions/actions'\nimport { editNote, deleteNote } from '../../redux/features/notes/notesSlice';\n\nconst Note = ({ note, dispatch }) => {\n    return (\n        <div className=\"note\">\n            <h2 className=\"note_title\">{note.title}</h2>\n            <p className=\"note_message\">{note.content}</p>\n            <h2 className=\"note_message\">{note.id}</h2>\n            <div className=\"control-buttons\">\n                <button className=\"btn btn-primary px-4 m-1\"\n                    onClick={() => dispatch(editNote(note.id))}>\n                    Edit</button>\n                <button className=\"btn btn-danger m-1\"\n                    onClick={() => dispatch(deleteNote(note.id))}>\n                    Delete</button>\n            </div>\n        </div>\n    )\n}\n// useDispatch hook will be simpler than Higher Order Component\nexport default connect()(Note);","import { useSelector, shallowEqual } from \"react-redux\";\n//import { selectNotesIds } from '../../redux/features/notes/notesSlice'\n\nconst NoteCounter = () => {\n    //const { notes } = useSelector(store => store.notes, shallowEqual);\n    const notes = useSelector(store=>store.notes.notes, shallowEqual);\n    //const notes = useSelector(selectNotesIds);\n    return (\n        <div>\n            {console.log('notes in counter', notes)}\n            <p className=\"text-center\">Number of Notes: {notes.length}</p>\n        </div>\n    );\n}\n// const mapStateToProps = (state) => {\n//     return { state }\n// };\n\n// export default connect(mapStateToProps)(NoteCounter);\nexport default NoteCounter;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n//import { updateNote } from '../redux/actions/actions';\nimport { updateNote } from '../../redux/features/notes/notesSlice';\n\nconst EditNote = ({ note }) => {\n    const [title, setTitle] = useState(note.title);\n    const [content, setContent] = useState(note.content);\n\n    const dispatch = useDispatch();\n    function handleUpdate(e) {\n        e.preventDefault();\n        const data = {\n            title,\n            content\n        };\n        console.log(`dispatch update with ${note.id}`, data);\n        //dispatch(updateNote(note.id, data));\n        dispatch(updateNote({ ...data, id: note.id }));\n    };\n\n    return (\n        <div className=\"note\">\n            <form className=\"form-group\" onSubmit={handleUpdate}>\n                <input className='form-control p-2 mb-2'\n                    required type=\"text\" value={title} onChange={e => setTitle(e.target.value)}\n                />\n                <textarea className='form-control p-2 mb-2'\n                    required rows=\"5\" value={content} onChange={e => setContent(e.target.value)} />\n                <button type=\"submit\" className='btn btn-primary'>Update</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditNote;","import React from \"react\"\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { selectFilteredAllNotes } from '../../redux/features/searchTerm/searchTermSlice'\nimport Note from \"./Note\";\nimport NoteCounter from './NoteCounter'\nimport EditNote from './EditNote'\n\n/**\n * The useSelector hook uses === (a.k.a. strict reference equality check) to check whether the previously fetched value from the store \n * is the same that we are currently getting. If that’s not the case, the component re-renders.\n * For simple selectors that only return a portion of the Redux store and nothing more, you can omit the second parameter in this hook. \n * However, when a new object is returned each time the hook runs (e.g., you are making some calculations in the selector function or are \n * building a new object from multiple values of the store), then you should make use of the Redux’s shallowEqual function. If that’s not sufficient, \n * give Reselect a try or try wrapping your component in useMemo instead.\n */\nconst NoteList = () => {\n    const { error, loading } = useSelector(store => store.notes, shallowEqual);\n    //const { searchTerm } = useSelector(store => store, shallowEqual);\n    //const term = searchTerm;\n    const notes = useSelector(selectFilteredAllNotes);\n    //const notesItems = notes.filter(n => term && term!=='' ? n.content.includes(term) : true).map((note) => (\n\n    const notesItems = notes.map((note) => (\n        <div key={note.id}>\n            {note.editing ?\n                <EditNote note={note} /> : <Note note={note} />}\n        </div>\n    ));\n\n    return (\n        <div>\n            {error && <div className=\"text-danger display-6 mt-5\">Error! {error}</div>}\n            {loading && <div className=\"text-center display-3 mt-5\">Loading...</div>}\n            {!error && !loading &&\n                <div className=\"note-container\">\n                    <h3 className=\"text-center\">All Notes</h3>\n                    {notes && notes.length > 0 && <NoteCounter />}\n                    {notes && notes.length === 0 && <div>Please fetch...</div>}\n                    <div className=\"note-container\">\n                        {notes && notesItems}\n                    </div>\n                </div>\n            }\n        </div>)\n}\n\nexport default NoteList","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n//import { addNote } from '../redux/actions/actions'\nimport { addNote } from '../../redux/features/notes/notesSlice'\nimport { nanoid } from 'nanoid'\n\nconst AddNote = () => {\n    const [value, setValue] = useState('');\n    const [content, setContent] = useState('');\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //dispatch(addNote(value, content));\n        dispatch(addNote({ title: value, content: content, id: nanoid(), editing: false }));\n\n        setContent('');\n        setValue('');\n    }\n\n    return (\n        <div className=\"note-container\" >\n            <h2 className=\"text-center\">Write a new note</h2>\n\n            <form className=\"form-group\" onSubmit={handleSubmit}>\n                <input className=\"form-control\" required\n                    type=\"text\" name='title'\n                    placeholder=\"enter title\"\n                    value={value} onChange={e => setValue(e.target.value)} />\n                <textarea className=\"form-control\"\n                    name='content' required rows={5}\n                    placeholder=\"enter content\"\n                    value={content} onChange={e => setContent(e.target.value)} />\n                <button className=\"btn btn-primary btn-lg\" type=\"submit\">Submit</button>\n            </form>\n        </div >\n    );\n}\n\nexport default AddNote;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setSearchTerm, clearSearchTerm, selectSearchTerm } from './searchTermSlice.js';\n\nconst searchIconUrl = './icons/search.svg';\nconst clearIconUrl = './icons/close.svg';\n\n\nconst SearchTerm = () => {\n    const searchTerm = useSelector(selectSearchTerm);\n    const dispatch = useDispatch();\n\n    const onSearchTermChangeHandler = (e) => {\n        const userInput = e.target.value;\n        dispatch(setSearchTerm(userInput));\n    };\n\n    const onClearSearchTermHandler = () => {\n        dispatch(clearSearchTerm());\n    };\n\n    return (\n        <div id=\"search-container\">\n            <img id=\"search-icon\" alt=\"\" src={searchIconUrl} />\n            <input\n                id=\"search\"\n                type=\"text\"\n                value={searchTerm}\n                onChange={onSearchTermChangeHandler}\n                placeholder=\"Search!\"\n            />\n            {searchTerm.length > 0 && (\n                <button\n                    onClick={onClearSearchTermHandler}\n                    type=\"button\"\n                    id=\"search-clear-button\" >\n                    <img src={clearIconUrl} alt=\"\" />\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default SearchTerm;","import { useState } from 'react'\nimport SearchTerm from '../../redux/features/searchTerm/SearchTerm'\n\nconst SettingsPane = ({ handleClick, handleClear, handleFetchError, handleSearch }) => {\n    const [value, setValue] = useState(10);\n    const [term, setTerm] = useState(\"\");;\n\n    const handleTermChange = evt => {\n        setTerm(evt.target.value);\n        handleSearch(evt.target.value);\n    }\n    const handleClearHere = () => {\n        setTerm(\"\");\n        handleClear();\n        handleSearch(\"\");\n    }\n    return (\n        <div className=\"note-container\">\n            <div className=\"input-group m-1\">\n                <input className=\"form-control\" placeholder='How many to fetch?' type='number' value={value} onChange={evt => setValue(evt.target.value)}></input>\n                <button className=\"btn btn-info btn-lg m-1\" type=\"submit\" onClick={() => handleClick(value)}>Fetch</button>\n            </div>\n            <button className=\"btn btn-secondary btn-lg m-1\" onClick={handleClearHere}>clear all </button>\n            <button className=\"btn btn-danger btn-lg m-1\" onClick={handleFetchError}>fetch with error </button>\n            <div className='m-1'>\n                <input className=\"form-control\" placeholder='search...' type='text' value={term} onChange={handleTermChange}></input>\n            </div>\n            <div>\n                <SearchTerm />\n            </div>\n        </div >\n    )\n}\n\nexport default SettingsPane;","import React, { useEffect } from 'react'\nimport NoteList from './NoteList';\nimport NewNote from './AddNote';\nimport { useDispatch } from 'react-redux'\nimport { fetchNotes, clearNotes } from '../../redux/features/notes/notesSlice'\nimport { setSearchTerm} from '../../redux/features/searchTerm/searchTermSlice'\nimport SettingsPane from './SettingsPane';\n\nconst NotesApp = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        // thunk (middleware captures it)\n        dispatch(fetchNotes(5))\n    }, [dispatch])\n\n\n    const handleSearch = term => {\n        dispatch(setSearchTerm(term));\n    }\n\n    return (\n        <div className=\"container fluid\" >\n            <div className=\"row\">\n                <div className=\"col\">\n                    <NewNote dispatch={dispatch} />\n                    <SettingsPane\n                        handleSearch={v => handleSearch(v)}\n                        handleClear={() => dispatch(clearNotes())}\n                        handleClick={v => dispatch(fetchNotes(v < 50 ? v : 9))}\n                        handleFetchError={v => dispatch(fetchNotes(-1))} />\n                </div>\n                <div className=\"col\">\n                    <NoteList />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NotesApp;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from 'nanoid'\n\nconst { actions, reducer } = createSlice({\n  name: \"todos\",\n  initialState: {\n    list: [\n      {\n        itemId: nanoid(),\n        task: \"align buttons\",\n        completed: false\n      },\n      {\n        itemId: nanoid(),\n        task: \"done tab\",\n        completed: false\n      },\n      {\n        itemId: nanoid(),\n        task: \"async fetch thunk\",\n        completed: false\n      }\n    ],\n    deleted: []\n  },\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = {\n        itemId: nanoid(),\n        task: action.payload.todoItem,\n        completed: false\n      };\n      state.list.push(newItem);\n    },\n    deleteDone: (state, action) => {\n      state.deleted = [...state.deleted,...state.list.filter(item => item.completed)]\n      const updateList = state.list.filter(item => !item.completed);\n      state.list = updateList;\n    },\n    updateList: (state, action) => {\n      const { itemIndex } = action.payload;\n      const updatedList = state.list.map(item => {\n        if (item.itemId === itemIndex) {\n          item.completed = !item.completed;\n        }\n        return item;\n      });\n      state.list = updatedList;\n    },\n    removeItem: state => state\n  }\n});\n\nexport const { addItem, deleteDone, updateList } = actions;\n\nexport default reducer;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateList} from \"../../redux/features/todos/todosSlice\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { useSelector, shallowEqual } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"400px\",\n    backgroundColor: theme.palette.background.paper,\n    margin: \"auto\"\n  },\n  strike: {\n    textDecoration: \"line-through;\"\n  }\n}));\n\nconst ToDoList = ({ dispatch }) => {\n  const classes = useStyles();\n\n  const { todos } = useSelector(store => store, shallowEqual);\n\n  const handleToggle = value => () => {\n    dispatch(updateList({ itemIndex: value }));\n  };\n\n  console.log('todos', todos);\n\n  const listItems = todos.list.map(item => {\n    const labelId = `checkbox-list-secondary-label-${item.itemId}`;\n    const listItemText = item.completed ? (\n      <ListItemText\n        id={labelId}\n        primary={item.task}\n        className={classes.strike}\n      />\n    ) : (\n      <ListItemText id={labelId} primary={item.task} />\n    );\n    return (\n      <ListItem key={item.itemId} button>\n        {listItemText}\n        <ListItemSecondaryAction>\n          <Checkbox\n            edge=\"end\"\n            onChange={handleToggle(item.itemId)}\n            checked={item.completed}\n            inputProps={{ \"aria-labelledby\": labelId }}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  });\n\n  return (\n    <List dense className={classes.root}>\n      {listItems}\n    </List>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   todo: state\n// });\n// const mapDispatchToProps = { updateList };\n//export default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\n\n//The connect() function connects a React component to a Redux store.\nexport default connect()(ToDoList);","import React, { useState } from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from '@material-ui/core/Typography';\n\nfunction TabPanel(props) {\n    const { children, value, index, } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`a11y-tabpanel-${index}`}\n            aria-labelledby={`a11y-tab-${index}`}>\n            {value === index && (\n                <Typography>{children}</Typography>\n            )} || {}\n        </div>\n    );\n}\n\nconst Header = () => {\n    const [value, setValue] = useState(0);\n    return (\n        <Tabs\n            value={value}\n            onChange={(evt, newValue) => setValue(newValue)}\n            style={{ backgroundColor: \"#f5f5f5\" }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n        >\n            <Tab label=\"TODOs\" />\n            <Tab label=\"Done\" />\n\n            <TabPanel value={value} index={2} >\n                Secrets! ! !\n            </TabPanel>\n\n        </Tabs>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addItem, deleteDone } from \"../../redux/features/todos/todosSlice\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n    padding: \"1rem\"\n  },\n  input: {\n    width: \"100%\"\n  }\n}));\n\nconst NewItem = (props) => {\n  const [entry, updateEntry] = React.useState(\"\");\n  const classes = useStyles();\n\n  const onAdd = () => {\n    if (!entry) return;\n\n    props.addItem({\n      todoItem: entry\n    });\n    updateEntry(\"\");\n  };\n\n  const onDelete = () => {\n    props.deleteDone();\n  }\n\n  return (\n    <Grid container spacing={1} className={classes.grid}>\n      <Grid item xs={8}>\n        <TextField\n          required \n          id=\"standard-textarea\"\n          label=\"add new task\"\n          placeholder=\"add new task\"\n          value={entry}\n          onChange={e => updateEntry(e.target.value)}\n          className={classes.input}\n        />\n      </Grid>\n      <Grid item xs={2}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>Add</Button>\n      </Grid>\n      <Grid item xs={2}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDelete}>Delete</Button>\n      </Grid>\n    </Grid>\n  );\n};\n\n// better to use selector hook!\nconst mapStateToProps = state => ({\n  value: state.todos,\n});\n\nconst mapDispatchToProps = { addItem, deleteDone };\nexport default connect(mapStateToProps, mapDispatchToProps)(NewItem);\n\n","import TodoList from './TodoList'\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from './Header';\nimport AddOrDeleteTodo from './NewItem';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        width: \"600px\",\n        padding: theme.spacing(3, 2),\n        height: \"600px\",\n        margin: \"3rem auto\",\n    }\n}));\n\nconst TodoApp = () => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <Header />\n            <AddOrDeleteTodo />\n            <TodoList />\n        </Paper>\n    );\n}\n\nexport default TodoApp;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const Box = ({\n  color,\n  msg\n}) => <div style={{\n  padding: 20,\n  backgroundColor: color,\n  width: \"50%\",\n  display: \"inline-block\",\n  textAlign: \"center\",\n  fontSize: \"150px\"\n}}>\n    {msg}\n  </div>;\n\nconst layoutProps = {\n  Box\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`¡Hóla, MDX!`}</h1>\n    <p>{`This is `}<strong parentName=\"p\">{`markdown`}</strong>{` with `}<span style={{\n        color: \"red\"\n      }}>{`JSX`}</span>{`: MDX!`}</p>\n    <div>\n  <Box color=\"tomato\" msg=\"左\" mdxType=\"Box\" />\n  <Box color=\"orange\" msg=\"右\" mdxType=\"Box\" />\n    </div>\n    <hr />\n    <h1>{`React-Redux`}</h1>\n    <p>{`In summary, to connect Redux to React, you must do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install and import react-redux`}</li>\n      <li parentName=\"ol\">{`Wrap your root App component inside of react-redux's Provider component`}</li>\n      <li parentName=\"ol\">{`Import connect into the component you'd like to pull Redux state into`}</li>\n      <li parentName=\"ol\">{`Create a mapStateToProps function that determines what state you'd like to pull from your store`}</li>\n      <li parentName=\"ol\">{`Export your component using connect, taking mapStateToProps as an argument`}</li>\n      <li parentName=\"ol\">{`Pass through your state as an argument to your render function`}</li>\n      <li parentName=\"ol\">{`Render your state`}</li>\n    </ol>\n    <p>{`Redux is simply a library that ensures we follow a certain pattern to update our global state.`}</p>\n    <h1>{`References`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://chriscourses.com/blog/redux\"\n        }}>{`https://chriscourses.com/blog/redux`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/hstevanoski/react-redux-notes-app/tree/hooks/src\"\n        }}>{`https://github.com/hstevanoski/react-redux-notes-app/tree/hooks/src`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/devAbhimanyu/Redux-toolkit/tree/createSlice\"\n        }}>{`https://github.com/devAbhimanyu/Redux-toolkit/tree/createSlice`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.softkraft.co/how-to-setup-redux-with-redux-toolkit/\"\n        }}>{`https://www.softkraft.co/how-to-setup-redux-with-redux-toolkit/`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://redux-toolkit.js.org/api/createSlice\"\n        }}>{`https://redux-toolkit.js.org/api/createSlice`}</a></li>\n    </ul>\n    <h1>{`Todo`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`todo`}</li>\n      <li parentName=\"ul\">{`async hook`}</li>\n      <li parentName=\"ul\">{`backend`}</li>\n      <li parentName=\"ul\">{`fix mdx`}</li>\n    </ul>\n    <h1>{`hooks`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`useSelctor`}</li>\n      <li parentName=\"ul\">{`useDispatcher`}</li>\n      <li parentName=\"ul\">{`useStore`}</li>\n      <li parentName=\"ul\">{`useEffect`}</li>\n      <li parentName=\"ul\">{`useState`}</li>\n    </ul>\n    <h1>{`redux`}</h1>\n    <ol>\n      <li parentName=\"ol\">{`Actions & Action Creators ( action + payload )`}</li>\n      <li parentName=\"ol\">{`Reducers (switch on actions)`}</li>\n      <li parentName=\"ol\">{`Store (createStore)`}</li>\n    </ol>\n    <h1>{`createSlice`}</h1>\n    <p>{`the files structure: we can put all of our Redux-related logic for the slice into a single file.\nconsists of :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`name: a parameter that will be the prefix for all of your action types`}</li>\n      <li parentName=\"ul\">{`initialState: the initial values for our reducer`}</li>\n      <li parentName=\"ul\">{`reducers: it's an object where the keys will become action type strings, and the functions are reducers that will be run when that action type is dispatched.`}</li>\n    </ul>\n    <h1>{`ducks`}</h1>\n    <p>{`Redux.org recommend that most applications should structure files using a \"feature folder\" approach (all files for a feature in the same folder) or the \"ducks\" pattern (all Redux logic for a feature in a single file), rather than splitting logic across separate folders by \"type\" of code (reducers, actions, etc).`}</p>\n    <h1>{`action creators`}</h1>\n    <p>{`console.log(createPost({ id: 123, title: 'Hello World' }))\n// {type : \"posts/createPost\", payload : {id : 123, title : \"Hello World\"}}`}</p>\n    <h1>{`dispatch (Higher Order Function/Component)`}</h1>\n    <p>{`If you don't specify the second argument to connect(), your component will receive dispatch by default. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` connect()(MyComponent)\n // which is equivalent with\n connect(null, null)(MyComponent)\n\n // or\n connect(mapStateToProps /** no second argument */)(MyComponent)\n`}</code></pre>\n    <p>{`if you provide mapDispatchToProps in the 2nd paramter, Therefore, instead of calling props.dispatch(() => increment()), you may call props.increment() directly. `}</p>\n    <h1>{`object spread operator`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://redux.js.org/recipes/using-object-spread-operator\"\n      }}>{`https://redux.js.org/recipes/using-object-spread-operator`}</a></p>\n    <h1>{`redux-thunk`}</h1>\n    <p>{`“Thunk” middleware lets you write action creators as “thunks”, that is, functions returning functions.\nThis inverts the control: you will get dispatch as an argument, so you can write an action creator that dispatches many times.\nIt is a 1middleware that looks at every action that passes through the system, and if it’s a function, it calls that function. That’s all it does.\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://daveceddia.com/what-is-a-thunk/\"\n      }}>{`https://daveceddia.com/what-is-a-thunk/`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://daveceddia.com/where-fetch-data-redux/\"\n      }}>{`https://daveceddia.com/where-fetch-data-redux/`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function createThunkMiddleware(extraArgument) {\n  return ({ dispatch, getState }) => next => action => {\n        // This gets called for every action you dispatch.\n        // If it's a function, call it.\n    if (typeof action === 'function') {\n      return action(dispatch, getState, extraArgument);\n    }\n\n        // Otherwise, just continue processing this action as usual\n    return next(action);\n  };\n}\n\nconst thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;\n`}</code></pre>\n    <p>{`The word \"thunk\" is a programming term that means \"a piece of code that does some delayed work\". For more details, see these posts:`}</p>\n    <h1>{`fetch async await`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://dmitripavlutin.com/javascript-fetch-async-await/\"\n      }}>{`https://dmitripavlutin.com/javascript-fetch-async-await/`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://javascript.plainenglish.io/how-to-make-your-js-fetch-not-look-so-ugly-f45c89f8bc3a\"\n      }}>{`https://javascript.plainenglish.io/how-to-make-your-js-fetch-not-look-so-ugly-f45c89f8bc3a`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://dmitripavlutin.com/javascript-fetch-async-await/\"\n      }}>{`https://dmitripavlutin.com/javascript-fetch-async-await/`}</a></p>\n    <h1>{`debounce and throttle`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://dmitripavlutin.com/react-throttle-debounce/\"\n      }}>{`https://dmitripavlutin.com/react-throttle-debounce/`}</a></p>\n    <h1>{`sleep`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{` await new Promise(r => setTimeout(r, 1000));\nor\nfunction sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); }`}</p>\n    </blockquote>\n    <h1>{`some api`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://jsonplaceholder.typicode.com/posts\"\n        }}>{`https://jsonplaceholder.typicode.com/posts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://zenquotes.io/api/quotes\"\n        }}>{`https://zenquotes.io/api/quotes`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import './App.css';\nimport NotesApp from './components/Notes/NotesApp';\nimport TodoApp from './components/Todos/TodoApp';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Link\n} from \"react-router-dom\";\n\n/* eslint-disable import/no-webpack-loader-syntax */\nimport HowTo from '!babel-loader!@mdx-js/loader!./HowTo.mdx'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <NotesApp />\n          </Route>\n          <Route path=\"/todo\">\n            <TodoApp />\n          </Route>\n          <Route path=\"/about\">\n            <HowTo />\n          </Route>\n        </Switch>\n      </div>\n    </Router >\n  );\n}\n\nconst NavBar = () => {\n  return (\n    <ul className=\"navBar\">\n      <li>\n        <Link className=\"left\" to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link className=\"left\" to=\"/todo\">Todo</Link>\n      </li>\n      <li>\n        <NavLink className=\"right\" to=\"/about\">About</NavLink>\n      </li>\n    </ul>)\n}\n\n// useSelector hook instead.\n//const mapStateToProps = state => {\n//  return { notes: state.notes }\n//}\n\n// useDispatch hook instead.\n//const mapDispatchToProps = dispatch => {\n//  return {\n//    dispatch\n//  }\n//}\n\n// connect is HOC higher order components\n// just like decorator?\n// https://reactjs.org/docs/higher-order-components.html\n//export default connect(mapStateToProps, mapDispatchToProps)(App)\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const logger = store => next => action => {\n    console.group(action.type)\n    console.info('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n  }\n  \n  export default logger","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport notesSlice from \"../features/notes/notesSlice\"\nimport todosSlice from \"../features/todos/todosSlice\"\nimport { searchTermReducer } from \"../features/searchTerm/searchTermSlice\"\nimport loggerMiddleware from '../middleware/logger'\n//import { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n// key will be the name in the store!!!\nconst reducer = combineReducers({\n    notes: notesSlice,\n    todos: todosSlice,\n    searchTerm: searchTermReducer,\n})\n\n//const composedEnhancer = composeWithDevTools(applyMiddleware(thunk))\n\nconst store = configureStore({\n    reducer,\n    middleware: [thunk, loggerMiddleware, ...getDefaultMiddleware()],\n})\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\n// traditional\n//import store from './redux/store/store'\n// redux-toolkit\nimport store from './redux/store/index'\n\n\n\n// cmd + option + j\n// store.getState() \n// store.dispatch({ type: 'ADD_POST', payload: { id: 1, title: 'How to Use Redux' } })\nwindow.store = store;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}